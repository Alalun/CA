# Spring DataSource
#spring.datasource.url=jdbc:mysql://localhost:3306/pki?createDatabaseIfNotExist=true&\
#  allowPublicKeyRetrieval=true&useLegacyDatetimeCode=false&serverTimezone=UTC&\
#  verifyServerCertificate=true&useSSL=true&requireSSL=true&\
#  clientCertificateKeyStoreUrl=file:/home/themaniac/Documents/Bezbednost_u_sistemima_elektronskog_poslovanja/testing_HTTPS/test_ca/linux_agent/tmpkeystore.jks&clientCertificateKeyStorePassword=password&\
#  trustCertificateKeyStoreUrl=file:/home/themaniac/Documents/Bezbednost_u_sistemima_elektronskog_poslovanja/testing_HTTPS/test_ca/linux_agent/tmptruststore.jks&trustCertificateKeyStorePassword=password
spring.datasource.url=jdbc:mysql://localhost:3306/pki?createDatabaseIfNotExist=true&useSSL=false&requireSSL=false
spring.datasource.username=pki_admin
spring.datasource.password=zgadija
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1
# JPA-Hibernate
spring.jpa.show-sql=false
# creates tables based on @Entity annotations
spring.jpa.hibernate.ddl-auto=update
# chooses best name convetion for tables and fields
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
# optimization for MySQL queries
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
# Jackson
spring.jackson.serialization.fail-on-empty-beans=false
spring.jackson.serialization.INDENT_OUTPUT=true
# SSL configuration
server.ssl.key-store-type=JKS
server.ssl.key-store=.keystore/keystore.jks
server.ssl.key-store-password=password
server.ssl.key-alias=siem
server.ssl.trust-store-type=JKS
server.ssl.trust-store=.keystore/truststore.jks
server.ssl.trust-store-password=password
server.ssl.enabled=true
server.ssl.client-auth=need
server.port=8085
# JWT token configuration
jwt.token.secret=very-private-secret-key-zgadija
jwt.token.header=X-Auth-Token
jwt.token.expiration=36000
# Logger configuration
logging.level.org.springframework.security=DEBUG
# CA configuration
# path to keystore where all certificates with private keys should be stored
ca.keystore=keystore.p12
ca.keystore.password=password
# certificate generation configuration
ca.gen.certificate.provider=BC
ca.gen.algorithm.signature=SHA256WithRSAEncryption
ca.gen.algorithm.key=RSA
ca.gen.seed.algorithm=SHA1PRNG
ca.gen.seed.provider=SUN
# size of serial number in bytes
ca.gen.serialnumbersize=20
# period unit for certificate Y=year, M=month, D=day
ca.gen.period.unit=Y
# key size for end-entity certificate
ca.gen.endentity.keysize=2048
# validation period in years for end-entity certificate
ca.gen.endentity.period=1
# key size for CA certficate
ca.gen.ca.keysize=4096
# validation period in years for CA certificate
ca.gen.ca.period=10
# SFTP config
ca.sftp.username=danijel
ca.sftp.repo.location=/tmp
ca.sftp.repo.hostname=localhost
